#!/usr/bin/env python3

# The MIT License
# Copyright (c) 2021 Adrian Tan <adrian_tan@nparks.gov.sg>
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permsit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

import os
import argparse
import textwrap
import tarfile

def main():
   
    parser = argparse.ArgumentParser(
         description="Extract and converts the dmp files to txt for mysql import",
         formatter_class=argparse.RawDescriptionHelpFormatter,
         epilog=textwrap.dedent('''\
           usage: txdmp2mysql taxdmp.tar.gz -d mysqldb
           '''))
    parser.add_argument("file", metavar="file", help="NCBI Taxonomic DB dump compressed tar ball", type=str)
    parser.add_argument('-d', '--mysqldb_dir', help='mysqldb directory', type=str, default=os.getcwd() + '/mysqldb')
    args = parser.parse_args()
    print(args.file)
    print(args.mysqldb_dir)

    try:
        os.makedirs(args.mysqldb_dir, exist_ok=True)
    except OSError as error:
        print(f'Directory {args.output_directory} cannot be created')   
        
    TAXNODES = {}
    NAMES = {}

    tar = tarfile.open(args.file, "r:gz")
    for member in tar.getmembers():
        f = tar.extractfile(member)
    
        print(f"processing {member.name}", end="")
        if member.name == "nodes.dmp":
            count = 0
            of = open(args.mysqldb_dir + '/nodes.txt', 'w')
            for line in f:
                sline = line.decode("utf-8")
                sline = sline.replace('\t', "")
                params = sline.split("|")
                count += 1
                params.pop()
                for i in range(len(params)):
                    of.write(f'{params[i]}') if i==0 else of.write(f'\t{params[i]}')
                of.write('\n')
            of.close()            
            print(f" - added {count} records")                                   
        elif member.name == "names.dmp":
            count = 0
            of = open(args.mysqldb_dir + '/names.txt', 'w')
            for line in f:
                sline = line.decode("utf-8")
                sline = sline.replace('\t', "")
                params = sline.split("|")
                count += 1
                params.pop()
                for i in range(len(params)):
                    of.write(f'{params[i]}') if i==0 else of.write(f'\t{params[i]}')
                of.write('\n')    
            of.close()            
            print(f" - added {count} records")       
        else:
            print(f" - ignored")
                 
main()
